name: Override Merge

on:
  issue_comment:
    types: [created]

jobs:
  setupFastForwardMerge:
    runs-on: ubuntu-latest
    # GITHUB_TOKEN change from read-write to read-only on 2024-02-01 requires permissions block
    # https://docs.opensource.microsoft.com/github/apps/permission-changes/
    # https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
    permissions: 
      actions: none
      contents: none
      security-events: none      
      pull-requests: write
    # Run only if
    # 1. The comment was made on a PR.
    # 2. The comment was made by @mcumming, @dalexsoto.
    # 3. The comment starts with "/sudo merge" sans the quotes.
    # 4. The comment contains either "--ff-only" or "--no-ff". The default is "--ff-only".
    # 5. The PR is open.
    if: |
       github.event.issue.pull_request != '' && 
       startswith(github.event.comment.body, '/sudo merge') &&
       !github.event.issue.closed_at &&
       github.event.issue.state == 'open' &&
       ( 
           github.event.comment.user.login == 'mcumming' ||
           github.event.comment.user.login == 'dalexsoto'
       )
    outputs:
      fast_forward: ${{ steps.parse_comment.outputs.fast_forward }}

    steps:
      - name: React to comment
        uses: dkershner6/reaction-action@v2 # You can also use a specific version, e.g. v2.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          reaction: '+1'

      - name: Parse Comment
        id: parse_comment
        shell: pwsh
        run: |
          Write-Host "Parsing $env:COMMENT"
          ($botName, $command, $options) = [System.Text.RegularExpressions.Regex]::Split("$env:COMMENT", "\s+")

          # Check if $options is null or empty and set default value
          if ([string]::IsNullOrEmpty($options)) {
              $options = '--ff-only'
          }

          # Validate that $options is one of the allowed values
          if ($options -ne '--ff-only' -and $options -ne '--no-ff') {
              # Equivalent to the deprecated ::set-output command: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idoutputs
              $comment = "ðŸ›‘ `${\color{red}\textbf{Invalid option&#58;}}`$ ``$options``.<BR/>Allowed values for ``merge`` are ``--ff-only`` or ``--no-ff``.<BR/><H3>Usage&#58;</H3>&nbsp;&nbsp;&nbsp;&nbsp;``merge [--ff-only|--no-ff]``"	  
              [IO.File]::AppendAllText($env:GITHUB_OUTPUT, "message=${comment}$([Environment]::NewLine)") 			  
              #echo "message=${comment}" >> $env:GITHUB_OUTPUT
              Write-Error "$comment"
          }
          
          [IO.File]::AppendAllText($env:GITHUB_OUTPUT, "fast_forward=${options}$([Environment]::NewLine)")
        env:
          COMMENT: "${{ github.event.comment.body }}"

      # Post a failure message when any of the previous steps fail.
      - name: Add failure comment to PR
        if: ${{ failure() }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repository}/issues/{issue_number}/comments
          repository: ${{ github.repository }}
          issue_number: ${{ github.event.issue.number }}
          body: |-
            ${{ steps.parse_comment.outputs.message }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  mergeFastForward:
    needs: setupFastForwardMerge
    runs-on: ubuntu-latest

    permissions:
      actions: none
      contents: write
      security-events: none
      pull-requests: write

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history so that we can rebase the PR.
          token: ${{ secrets.GITHUB_TOKEN }}

      # Get details of the PR. The target and base branch. And also whether the PR can be merged in or not.
      - name: Get PR details
        uses: octokit/request-action@v2.x
        id: get-pr-details
        with:
          route: GET /repos/{repository}/pulls/{pull_number}
          repository: ${{ github.repository }}
          pull_number: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Merge (rebase) the PR if it is allowed.
      - name: Merge the PR
        id: merge-status
        shell: bash
        env:
          MERGEABLE_STATUS: ${{ fromJson(steps.get-pr-details.outputs.data).mergeable_state }}
          BASE_BRANCH: ${{ fromJson(steps.get-pr-details.outputs.data).base.ref }}
          HEAD_BRANCH: ${{ fromJson(steps.get-pr-details.outputs.data).head.ref }}
          FAST_FORWARD: ${{ needs.setupFastForwardMerge.outputs.fast_forward }}
        run: |
          if [ "$MERGEABLE_STATUS" = "clean" ]; then
            git config --global user.email "<github-actions-sudo@xamarin.com>"
            git config --global user.name "GitHub Actions SUDO"

            git checkout $BASE_BRANCH
            git pull origin $HEAD_BRANCH $FAST_FORWARD
            git push origin $BASE_BRANCH

            echo "message=ðŸŽ‰ PR merged succesfully. ðŸŽ‰" >> $GITHUB_OUTPUT
          else
            echo "message=ðŸ’¥ PR cannot be merged autonomously. ðŸ’¥" >> $GITHUB_OUTPUT
          fi

      # Post a success/failure comment to the PR.
      - name: Add comment to PR
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repository}/issues/{issue_number}/comments
          repository: ${{ github.repository }}
          issue_number: ${{ github.event.issue.number }}
          body: ${{ steps.merge-status.outputs.message }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Post a failure message when any of the previous steps fail.
      - name: Add failure comment to PR
        if: ${{ failure() }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repository}/issues/{issue_number}/comments
          repository: ${{ github.repository }}
          issue_number: ${{ github.event.issue.number }}
          body: ${{ steps.merge-status.outputs.message }} Check the Actions execution tab for details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
